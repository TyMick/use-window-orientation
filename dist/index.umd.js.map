{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport debounce from \"lodash.debounce\";\n\ntype Orientation = \"portrait\" | \"landscape\";\n\ninterface OrientationOptions {\n  defaultOrientation?: Orientation;\n}\n\ninterface OrientationResults {\n  orientation: Orientation;\n  portrait: boolean;\n  landscape: boolean;\n}\n\n/**\n * React hook for using window orientation. Not _device_ orientationâ€”this hook determines orientation based on the width and height of the window.\n * @param {OrientationOptions} [options] - The options object\n * @param {Orientation} [options.defaultOrientation=portrait] - The default orientation to return when there is no window\n * @returns {OrientationResults} An object containing the results of the orientation query in both string and boolean form\n */\nexport default function useWindowOrientation(\n  options: OrientationOptions = {}\n): OrientationResults {\n  if (typeof options !== \"object\") {\n    throw new TypeError(\"The options argument must be formatted as an object.\");\n  }\n  const { defaultOrientation = \"portrait\" } = options;\n\n  if (defaultOrientation !== \"portrait\" && defaultOrientation !== \"landscape\") {\n    const isString = typeof defaultOrientation === \"string\";\n    throw new TypeError(\n      `${isString ? '\"' : \"\"}${defaultOrientation}${\n        isString ? '\"' : \"\"\n      } is not a valid defaultOrientation. Use \"portrait\" or \"landscape\".`\n    );\n  }\n\n  const [orientation, setOrientation] = useState(defaultOrientation);\n\n  useEffect(() => {\n    const handleResize = debounce(\n      () => {\n        if (window.innerWidth <= window.innerHeight) {\n          setOrientation(\"portrait\");\n        } else {\n          setOrientation(\"landscape\");\n        }\n      },\n      400,\n      { leading: true, trailing: true }\n    );\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      handleResize.cancel();\n    };\n  }, []);\n\n  return {\n    orientation,\n    portrait: orientation === \"portrait\",\n    landscape: orientation === \"landscape\",\n  };\n}\n"],"names":["options","TypeError","defaultOrientation","isString","orientation","setOrientation","useState","useEffect","handleResize","debounce","window","innerWidth","innerHeight","leading","trailing","addEventListener","removeEventListener","cancel","portrait","landscape"],"mappings":"saAsBEA,EAA8B,IAE9B,GAAuB,iBAAZA,EACT,UAAUC,UAAU,wDAEtB,MAAMC,mBAAEA,EAAqB,YAAeF,EAE5C,GAA2B,aAAvBE,GAA4D,cAAvBA,EAAoC,CAC3E,MAAMC,EAAyC,iBAAvBD,EACxB,UAAUD,aACLE,EAAW,IAAM,KAAKD,IACvBC,EAAW,IAAM,wEAKvB,MAAOC,EAAaC,GAAkBC,WAASJ,GAuB/C,OArBAK,YAAU,KACR,MAAMC,EAAeC,UACnB,KACMC,OAAOC,YAAcD,OAAOE,YAC9BP,EAAe,YAEfA,EAAe,cAGnB,IACA,CAAEQ,SAAS,EAAMC,UAAU,IAK7B,OAHAN,IACAE,OAAOK,iBAAiB,SAAUP,GAE3B,KACLE,OAAOM,oBAAoB,SAAUR,GACrCA,EAAaS,WAEd,IAEI,CACLb,YAAAA,EACAc,SAA0B,aAAhBd,EACVe,UAA2B,cAAhBf"}